$date
	Fri Nov 15 16:42:41 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module addsub_tb $end
$var wire 1 ! carryout $end
$var wire 4 " S [3:0] $end
$var reg 1 # M $end
$var reg 4 $ X [3:0] $end
$var reg 4 % Y [3:0] $end
$scope module uut $end
$var wire 1 # M $end
$var wire 4 & X [3:0] $end
$var wire 4 ' Y [3:0] $end
$var wire 4 ( Y_xor [3:0] $end
$var wire 1 ! carryout $end
$var wire 4 ) S [3:0] $end
$var wire 3 * C [3:1] $end
$scope module fa0 $end
$var wire 1 # Cin $end
$var wire 1 + Cout $end
$var wire 1 , s $end
$var wire 1 - x $end
$var wire 1 . y $end
$upscope $end
$scope module fa1 $end
$var wire 1 / Cin $end
$var wire 1 0 Cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module fa2 $end
$var wire 1 4 Cin $end
$var wire 1 5 Cout $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module fa3 $end
$var wire 1 9 Cin $end
$var wire 1 ! Cout $end
$var wire 1 : s $end
$var wire 1 ; x $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0<
0;
1:
19
08
17
06
15
14
13
02
01
10
1/
1.
1-
0,
1+
b111 *
b1000 )
b11 (
b11 '
b101 &
b11 %
b101 $
0#
b1000 "
0!
$end
#10
04
11
b101 *
00
06
0:
1!
0.
03
18
1<
b1100 (
b10 "
b10 )
0,
1#
#20
0!
1:
14
09
10
b11 *
05
11
b1110 "
b1110 )
16
13
08
b1010 (
12
07
b101 %
b101 '
b11 $
b11 &
#30
14
10
19
1/
01
15
1!
b111 *
1+
06
0:
1.
03
0<
b0 "
b0 )
0,
b1 (
17
1;
0#
b1 %
b1 '
b1111 $
b1111 &
#40
11
0!
06
1:
13
18
b1010 "
b1010 )
0,
b111 (
0-
07
0;
1#
b1000 %
b1000 '
b10 $
b10 &
#50
