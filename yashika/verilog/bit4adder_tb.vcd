$date
	Fri Nov 15 16:11:10 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module bit4adder_tb $end
$var wire 1 ! carryout $end
$var wire 4 " S [3:0] $end
$var reg 4 # X [3:0] $end
$var reg 4 $ Y [3:0] $end
$var reg 1 % carryin $end
$scope module uut $end
$var wire 4 & X [3:0] $end
$var wire 4 ' Y [3:0] $end
$var wire 1 % carryin $end
$var wire 1 ! carryout $end
$var wire 4 ( S [3:0] $end
$var wire 3 ) C [3:1] $end
$scope module stage0 $end
$var wire 1 % Cin $end
$var wire 1 * Cout $end
$var wire 1 + s $end
$var wire 1 , x $end
$var wire 1 - y $end
$upscope $end
$scope module stage1 $end
$var wire 1 . Cin $end
$var wire 1 / Cout $end
$var wire 1 0 s $end
$var wire 1 1 x $end
$var wire 1 2 y $end
$upscope $end
$scope module stage2 $end
$var wire 1 3 Cin $end
$var wire 1 4 Cout $end
$var wire 1 5 s $end
$var wire 1 6 x $end
$var wire 1 7 y $end
$upscope $end
$scope module stage3 $end
$var wire 1 8 Cin $end
$var wire 1 ! Cout $end
$var wire 1 9 s $end
$var wire 1 : x $end
$var wire 1 ; y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
bx )
bx (
bx '
bx &
x%
bx $
bx #
bx "
x!
$end
#10
00
05
09
0.
03
08
0*
0/
b0 )
04
0!
b0 "
b0 (
0+
0-
02
07
0;
0,
01
06
0:
0%
b0 $
b0 '
b0 #
b0 &
#20
b10 "
b10 (
10
1.
b1 )
1*
1-
1,
b1 $
b1 '
b1 #
b1 &
#30
19
b1110 "
b1110 (
15
18
13
14
1!
b111 )
1/
12
17
1;
11
16
1:
b1111 $
b1111 '
b1111 #
b1111 &
#40
b1111 "
b1111 (
1+
1%
#50
0!
08
04
03
0/
0.
b0 )
0*
15
10
19
b1111 "
b1111 (
1+
0-
07
01
0:
0%
b1010 $
b1010 '
b101 #
b101 &
#60
1!
09
18
14
05
13
1/
00
1.
b111 )
1*
b0 "
b0 (
0+
1-
02
17
0;
0,
11
06
1:
1%
b101 $
b101 '
b1010 #
b1010 &
#70
b1 "
b1 (
1+
07
1,
16
b1 $
b1 '
b1111 #
b1111 &
#80
b0 "
b0 (
0+
12
17
1;
0,
01
06
0:
b1111 $
b1111 '
b0 #
b0 &
